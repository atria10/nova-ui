# ‚úÖ Checklist Finale - Nova UI NPM Package

## üìã Pre-Pubblicazione

### 1. File di Configurazione
- [ ] **package.json** aggiornato con i nuovi scripts e export maps
- [ ] **tsconfig.build.json** creato per la build dei types
- [ ] **tsconfig.esm.json** creato per il build ESM  
- [ ] **tsconfig.cjs.json** creato per il build CommonJS
- [ ] **.npmignore** creato per escludere file non necessari

### 2. Scripts di Build
- [ ] **scripts/fix-cjs-extensions.js** creato
- [ ] **scripts/build-styles.js** creato  
- [ ] **scripts/pre-build.js** creato
- [ ] Tutti gli scripts sono eseguibili: `chmod +x scripts/*.js`

### 3. Export Structure per Tree-shaking
- [ ] **index.ts** nel root con export individuali
- [ ] **components/index.ts** aggiornato
- [ ] **utils/index.ts** creato
- [ ] **contexts/index.ts** creato
- [ ] **types/index.ts** creato (se necessario)

### 4. Dependencies
- [ ] **rimraf** installato come devDependency
- [ ] Tutte le **peerDependencies** sono corrette
- [ ] **dependencies** contengono solo le librerie necessarie
- [ ] **devDependencies** contengono tools di build

---

## üèóÔ∏è Build e Test

### 5. Test di Build
```bash
# Esegui questi comandi per verificare che tutto funzioni:

# Clean e build completo
npm run clean
npm run build

# Verifica che le directory siano create correttamente
ls -la dist/
# Dovresti vedere: cjs/, esm/, types/, styles.css

# Verifica i file TypeScript declaration
ls -la dist/types/
# Dovresti vedere tutti i file .d.ts

# Test import di esempio
node -e "console.log(require('./dist/cjs/index.js'))"
```

### 6. Validazione Package
- [ ] **package.json** validato con `npm pack --dry-run`
- [ ] **.npmignore** testato con `npm pack` (controlla dimensione)
- [ ] **exports** map testata con import di prova
- [ ] **Tree-shaking** funziona (test con bundler)

---

## üì¶ Setup NPM

### 7. Account NPM
- [ ] Account NPM creato su [npmjs.com](https://npmjs.com)
- [ ] Email verificata
- [ ] 2FA attivato (raccomandato)
- [ ] Login eseguito: `npm login`

### 8. Package Name
- [ ] Nome package disponibile: `npm view @tuousername/nova-ui`
- [ ] Nome aggiornato nel **package.json**
- [ ] Scope `@tuousername` confermato

---

## üöÄ Pubblicazione

### 9. Pre-pubblicazione
```bash
# Verifica finale del package
npm pack

# Estrai e ispeziona il contenuto
tar -tzf nova-ui-1.0.0.tgz

# Controlla che ci siano solo i file necessari
```

### 10. Prima Pubblicazione
```bash
# Pubblica la prima versione
npm publish --access public

# Se usi scope privato (a pagamento)
npm publish
```

### 11. Post-pubblicazione
- [ ] Verifica su [npmjs.com](https://npmjs.com/package/@tuousername/nova-ui)
- [ ] Test installazione: `npm install @tuousername/nova-ui`
- [ ] Test import in progetto separato
- [ ] **README.md** mostrato correttamente su NPM

---

## üß™ Test di Integrazione

### 12. Crea Progetto Test
```bash
# In una directory separata
npx create-next-app@latest test-nova-ui --typescript --tailwind
cd test-nova-ui

# Installa la tua libreria
npm install @tuousername/nova-ui

# Test import
echo "import { Button } from '@tuousername/nova-ui';" > test-import.js
node test-import.js
```

### 13. Test Tree-shaking
```tsx
// In test-nova-ui/pages/index.tsx
import Button from '@tuousername/nova-ui/components/button/Button';
import { cn } from '@tuousername/nova-ui/utils/cn';

export default function Home() {
  return (
    <Button className={cn("test-class")}>
      Test Nova UI
    </Button>
  );
}
```

### 14. Build e Bundle Analysis
```bash
# Nel progetto test
npm run build

# Analizza bundle (se hai webpack-bundle-analyzer)
npx webpack-bundle-analyzer .next/static/chunks/*.js
```

---

## üìà Versioning e Aggiornamenti

### 15. Semantic Versioning
- [ ] **1.0.0** per primo release stabile
- [ ] **0.x.x** per beta/alpha
- [ ] **CHANGELOG.md** creato

### 16. Script per Release Future
```bash
# Aggiungi al package.json
{
  "scripts": {
    "release:patch": "npm version patch && npm run build && npm publish",
    "release:minor": "npm version minor && npm run build && npm publish", 
    "release:major": "npm version major && npm run build && npm publish"
  }
}
```

---

## üåü Post-Launch

### 17. Documentazione
- [ ] **README.md** completo e aggiornato
- [ ] **Storybook** deployato (GitHub Pages/Vercel)
- [ ] **Esempi di utilizzo** documentati
- [ ] **TypeScript types** funzionanti

### 18. Promozione
- [ ] Repository GitHub pubblico
- [ ] **Topics** aggiunti al repo GitHub
- [ ] **License** (MIT) aggiunta
- [ ] **Contributing guidelines** create

### 19. Monitoring
- [ ] NPM download stats monitorate
- [ ] GitHub issues/discussions abilitate
- [ ] **Dependabot** configurato per aggiornamenti automatici
- [ ] **CI/CD** pipeline configurata (GitHub Actions)

---

## üõ°Ô∏è Security & Maintenance

### 20. Security
- [ ] **npm audit** eseguito e vulnerabilit√† risolte
- [ ] **Dependabot** configurato
- [ ] **Security policy** creata (.github/SECURITY.md)

### 21. Automation
```yaml
# .github/workflows/publish.yml
name: Publish to NPM
on:
  release:
    types: [published]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - run: npm test
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
```

---

## üéØ Commands Quick Reference

```bash
# Build completo
npm run build

# Test locale
npm pack
tar -tzf *.tgz

# Pubblicazione
npm login
npm publish --access public

# Aggiornamenti futuri
npm version patch
npm run build  
npm publish

# Test in altro progetto
npm install @tuousername/nova-ui
```

---

## ‚ú® Success Indicators

### ‚úÖ Tutto OK quando:
- [ ] `npm install @tuousername/nova-ui` funziona
- [ ] Import funzionano: `import { Button } from '@tuousername/nova-ui'`
- [ ] TypeScript autocomplete funziona
- [ ] Tree-shaking riduce bundle size
- [ ] Stili si applicano correttamente
- [ ] Temi DaisyUI funzionano
- [ ] Build production √® pulito e senza errori

---

**üöÄ Sei pronto per lanciare Nova UI su NPM!**